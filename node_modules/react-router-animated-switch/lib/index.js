"use strict";

var _jsxFileName = "/Users/fplindesay/Documents/GitHub/moped/packages/react-router-animated-switch/lib/index.jsx";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var BaseSwitch_1 = require("./BaseSwitch");
var transition = 'opacity .15s linear, transform .3s ease-out';
var totalDurationMs = 300;

var Animation = function (_React$Component) {
    _inherits(Animation, _React$Component);

    function Animation() {
        _classCallCheck(this, Animation);

        var _this = _possibleConstructorReturn(this, (Animation.__proto__ || Object.getPrototypeOf(Animation)).apply(this, arguments));

        _this.state = { animationEnded: true };
        _this._previousElement = null;
        _this._previousIndex = -1;
        _this._timer = null;
        return _this;
    }

    _createClass(Animation, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(newProps) {
            var _this2 = this;

            if (newProps.index !== this.props.index) {
                if (this._timer !== null) clearTimeout(this._timer);
                this._previousElement = this.props.children;
                this._previousIndex = this.props.index;
                this.setState({ animationEnded: false });
                this._timer = setTimeout(function () {
                    _this2.setState({ animationEnded: true });
                }, totalDurationMs);
            }
        }
    }, {
        key: "_translate",
        value: function _translate(to) {
            return to === 'start' ? 'translate(-25%, 0)' : 'translate(25%, 0)';
        }
    }, {
        key: "_itemAt",
        value: function _itemAt(index) {
            var baseStyle = this.props.itemStyle || {};
            if (index === this.props.index) {
                return React.createElement(
                    "div",
                    { key: index, className: this.props.itemClassName, style: Object.assign({}, baseStyle, { opacity: 1, transform: 'translate(0, 0)', transition: transition, position: 'absolute', top: 0, left: 0, right: 0, bottom: 0 }), __source: {
                            fileName: _jsxFileName,
                            lineNumber: 33
                        },
                        __self: this
                    },
                    this.props.children
                );
            }
            return React.createElement(
                "div",
                { key: index, className: this.props.itemClassName, style: Object.assign({}, baseStyle, { opacity: 0, transform: this.props.index === -1 ? 'translate(0, 0)' : this._translate(index < this.props.index ? 'start' : 'end'), transition: transition, position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, visibility: !this.state.animationEnded && index === this._previousIndex ? 'visible' : 'hidden' }), __source: {
                        fileName: _jsxFileName,
                        lineNumber: 37
                    },
                    __self: this
                },
                !this.state.animationEnded && index === this._previousIndex ? this._previousElement : null
            );
        }
    }, {
        key: "render",
        value: function render() {
            var children = [];
            for (var i = 0; i < this.props.count; i++) {
                children.push(this._itemAt(i));
            }
            return React.createElement(
                "div",
                { className: this.props.className, style: Object.assign({}, this.props.style || {}, { position: 'relative', overflow: 'hidden' }), __source: {
                        fileName: _jsxFileName,
                        lineNumber: 52
                    },
                    __self: this
                },
                children
            );
        }
    }]);

    return Animation;
}(React.Component);
/**
 * The public API for rendering the first <Route> that matches.
 */


var Switch = function (_React$Component2) {
    _inherits(Switch, _React$Component2);

    function Switch() {
        _classCallCheck(this, Switch);

        return _possibleConstructorReturn(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).apply(this, arguments));
    }

    _createClass(Switch, [{
        key: "render",
        value: function render() {
            var _this4 = this;

            return React.createElement(
                BaseSwitch_1.default,
                { location: this.props.location, render: function render(element, index, children) {
                        return React.createElement(
                            Animation,
                            { className: _this4.props.className, count: React.Children.count(children), index: index, itemClassName: _this4.props.itemClassName, itemStyle: _this4.props.itemStyle, style: _this4.props.style, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 62
                                },
                                __self: _this4
                            },
                            element
                        );
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 62
                    },
                    __self: this
                },
                this.props.children
            );
        }
    }]);

    return Switch;
}(React.Component);

exports.default = Switch;
//# sourceMappingURL=index.jsx.map